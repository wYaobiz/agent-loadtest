version: "3.7"
services:

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      GF_RENDERING_SERVER_URL: http://grafana-image-renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - grafana-volume:/var/lib/grafana
      - ./grafana/grafana-provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - grafana-image-renderer
      - loki
    networks:
      - aries-load-test

  # https://grafana.com/grafana/plugins/grafana-image-renderer/#installation
  grafana-image-renderer:
    container_name: grafana-image-renderer
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081
    volumes:
      - ./config.json:/usr/src/app/config.json
    networks:
      - aries-load-test

  # https://github.com/IzakMarais/reporter
  grafana-pdf-exporter:
    container_name: grafana-pdf-exporter
    image: izakmarais/grafana-reporter
    entrypoint: "/usr/local/bin/grafana-reporter -ip grafana:3000 -grid-layout=1"
    ports:
      - 8686:8686
    depends_on:
      - grafana
      - grafana-image-renderer
    networks:
      - aries-load-test

  loki:
    container_name: loki
    image: grafana/loki:2.4.2
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-volume:/data/loki
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
    networks:
      - aries-load-test

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.33.1
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    networks:
      - aries-load-test
    # https://stackoverflow.com/a/67158212/898
    extra_hosts:
      - "host.docker.internal:host-gateway"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.39.3
    container_name: cadvisor
    command:
      - '-port=9091'
    ports:
      - 9091:9091
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - aries-load-test

  issuer-verifier-postgres-exporter-postgres-single-instance:
    container_name: issuer-verifier-postgres-exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@issuer-verifier-wallet-db:5000/postgres?sslmode=disable
    networks:
      - aries-load-test
    ports:
      - 9187:9187
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    profiles: [ "postgres-single-instance" ]

  issuer-verifier-postgres-exporter-node-1:
    container_name: issuer-verifier-postgres-exporter-node-1
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-node-1:5432/postgres?sslmode=disable
    networks:
      - aries-load-test
    ports:
      - 9187:9187
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    profiles: [ "postgres-cluster" ]

  issuer-verifier-postgres-exporter-node-2:
    container_name: issuer-verifier-postgres-exporter-node-2
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-node-2:5432/postgres?sslmode=disable
    networks:
      - aries-load-test
    ports:
      - 9188:9187
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    profiles: [ "postgres-cluster" ]

  issuer-verifier-postgres-exporter-node-3:
    container_name: issuer-verifier-postgres-exporter-node-3
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-node-2:5432/postgres?sslmode=disable
    networks:
      - aries-load-test
    ports:
      - 9189:9187
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    profiles: [ "postgres-cluster" ]

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      - DOZZLE_BASE=/dozzle
      - DOZZLE_LEVEL=DEBUG
      - DOZZLE_USERNAME=view
      - DOZZLE_PASSWORD=8R1uVAwRn3eyjKPj1A4iZggWTay9IOa5kEYFyaoM
      - DOZZLE_KEY=7zocTTANMOOH3eZVXmD5DShm4ja1vQmfoHqZRh3a
      - DOZZLE_NO_ANALYTICS=true
    networks:
      - aries-load-test
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

networks:
  aries-load-test:
    external: false
    name: aries-load-test

volumes:
  grafana-volume:
  loki-volume:
